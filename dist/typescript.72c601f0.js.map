{"version":3,"sources":["ejercicios/typescript/index.ts"],"names":[],"mappings":"AAAA;AAEA,IAAI,IAAI,GAAW,IAAnB;AACA,IAAI,GAAC,KAAL;AAEA,IAAI,GAAG,GAAU,CAAjB;AACA,IAAI,IAAI,GAAU,CAAlB;AAEA,IAAI,MAAM,GAAS,UAAnB,EAEA;;AAEA,IAAI,QAAQ,GAAW,EAAvB;AACA,QAAQ,GAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAAT;AACA,QAAQ,CAAC,IAAT,CAAc,CAAd;AAEA,IAAI,WAAW,GAAY,EAA3B;AAEA,WAAW,GAAE,CAAC,MAAD,EAAQ,KAAR,EAAc,KAAd,CAAb;AACA,WAAW,CAAC,IAAZ,CAAiB,QAAjB,GAEA;;AAEA,IAAK,KAAL;;AAAA,CAAA,UAAK,KAAL,EAAU;AACN,EAAA,KAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,KAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA,EAAA,KAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACH,CAJD,EAAK,KAAK,KAAL,KAAK,GAAA,EAAA,CAAV;;AAOA,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,IAAlB;AAEA,OAAO,CAAC,GAAR,CAAY,iBAAZ,GAGA;;AAEA,IAAI,UAAU,GAAM,EAApB;AACA,UAAU,GAAC;AAAC,EAAA,MAAM,EAAC;AAAR,CAAX,EAGA;;AAEA,IAAI,cAAc,GAAS;AAAC,EAAA,MAAM,EAAC;AAAR,CAA3B,EAGA;;AAEA,SAAS,GAAT,CAAa,CAAb,EAAsB,CAAtB,EAA8B;AAC1B,SAAO,CAAC,GAAC,CAAT;AACH;;AAED,IAAM,IAAI,GAAC,GAAG,CAAC,CAAD,EAAG,CAAH,CAAd,EAEA;;AAEA,SAAS,WAAT,CAAqB,CAArB,EAA6B;AACzB,SAAO,UAAU,CAAV,EAAkB;AACrB,WAAO,CAAC,GAAC,CAAT;AACH,GAFD;AAGH,EAGD;;;AAEA,SAAS,WAAT,CAAqB,SAArB,EAAsC,QAAtC,EAAsD;AAElD,SAAU,SAAS,GAAA,GAAT,GAAa,QAAvB;AAEH;;AAED,IAAM,OAAO,GAAC,WAAW,CAAC,MAAD,CAAzB,EAGA;;AACA,SAAS,YAAT,CAAsB,SAAtB,EAAuC,QAAvC,EAA4D;AAArB,MAAA,QAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,KAAA;AAAqB;;AAExD,SAAU,SAAS,GAAA,GAAT,GAAa,QAAvB;AAEH;;AAED,IAAM,QAAQ,GAAC,WAAW,CAAC,MAAD,CAA1B;AAGA,IAAM,OAAO,GAAC,WAAW,CAAC,CAAD,CAAzB;AACA,IAAM,OAAO,GAAC,OAAO,CAAC,CAAD,CAArB;AAaA,IAAI,IAAI,GAAa;AACjB,EAAA,KAAK,EAAC,CADW;AAEjB,EAAA,IAAI,EAAC,EAFY;AAGjB,EAAA,KAAK,EAAE,KAAK,CAAC;AAHI,CAArB;;AAMA,SAAS,IAAT,CAAc,CAAd,EAA2B;AACvB,SAAO,CAAC,CAAC,IAAF,GAAS,CAAC,CAAC,KAAlB;AACH;;AAED,IAAM,QAAQ,GAAC,IAAI,CAAC,IAAD,CAAnB;;AAGA,IAAI,CAAC,QAAL,GAAgB,YAAA;AACb,SAAO,KAAK,KAAL,GAAW,sBAAoB,KAAK,KAApC,GAA4C,kBAAnD;AACF,CAFD;;AAKA,OAAO,CAAC,GAAR,CAAY,QAAZ;AAEA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,QAAL,EAAZ","file":"typescript.72c601f0.js","sourceRoot":"..","sourcesContent":["/// tipos de datos typescript\r\n\r\nlet bool: boolean =true\r\nbool=false\r\n\r\nlet num: number= 5\r\nlet num2: number =6\r\n\r\nlet nombre: string=\"estrella\"\r\n\r\n// arreglos\r\n\r\nlet numArray: number[]=[]\r\nnumArray=[1,2,3,4]\r\nnumArray.push(5)\r\n\r\nlet stringArray : string[]=[]\r\n\r\nstringArray= ['hola','con','los']\r\nstringArray.push('arrays')\r\n\r\n// enum \r\n\r\nenum Color{\r\n    rojo=\"rojo\",\r\n    amarillo=\"amarillo\",\r\n    azul=\"azul\"\r\n}\r\n\r\n\r\nconsole.log(Color.rojo)\r\n\r\nconsole.log(\"Hola typescript\")\r\n\r\n\r\n// tipo Any\r\n\r\nlet cualquiera: any=10\r\ncualquiera={nombre:\"luis\"}\r\n\r\n\r\n// tipo objeto\r\n\r\nlet variableObjeto: object={nombre:\"luis\"}\r\n\r\n\r\n// tipar funciones \r\n\r\nfunction add(a:number,b:number): number{\r\n    return a+b\r\n}\r\n\r\nconst suma=add(4,5)\r\n\r\n//funcion que retorna otra funcion\r\n\r\nfunction createAdder(a:number):(number:number)=>number{\r\n    return function (b:number) {\r\n        return b+a\r\n    }\r\n}\r\n\r\n\r\n// argumentos no obligatorios\r\n\r\nfunction nameComplet(firstName:string,LastName?:string):string {\r\n\r\n    return `${firstName} ${LastName}`\r\n    \r\n}\r\n\r\nconst persona=nameComplet('luis');\r\n\r\n\r\n// argumentos por defecto\r\nfunction nameComplet2(firstName:string,LastName:string=\"Doe\"):string {\r\n\r\n    return `${firstName} ${LastName}`\r\n    \r\n}\r\n\r\nconst persona2=nameComplet('luis');\r\n\r\n\r\nconst addFour=createAdder(4)\r\nconst fourSix=addFour(6)\r\n\r\n\r\n\r\n/////////////////////// INTERFACES\r\n\r\n\r\ninterface Rectangulo {\r\n    ancho: number,\r\n    alto:number\r\n    color?: Color\r\n}\r\n\r\nlet rect: Rectangulo={\r\n    ancho:5,\r\n    alto:10,\r\n    color: Color.azul\r\n}\r\n\r\nfunction area(r: Rectangulo):number{\r\n    return r.alto * r.ancho\r\n}\r\n\r\nconst areaRect=area(rect)\r\n;\r\n\r\nrect.toString = function() {\r\n   return this.color?`Es un rectangulo ${this.color}`:`Es un rectangulo`\r\n}\r\n\r\n\r\nconsole.log(areaRect)\r\n\r\nconsole.log(rect.toString())\r\n\r\n\r\n\r\n"]}