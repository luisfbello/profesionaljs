{"version":3,"sources":["assests/mediaPlayer.js","assests/plugins/autoPlay.js","assests/plugins/autoPause.js","assests/index.js"],"names":["MediaPlayer","config","media","el","plugins","_initPlugins","prototype","player","play","pause","muted","val","forEach","plugin","run","paused","mute","autoPlay","autoPause","constructor","threshold","handlerIntersection","bind","handlerVisivilityCahnge","observer","IntersectionObserver","observe","document","addEventListener","entries","entry","visible","intersectionRatio","visibilityState","video","querySelector","button","unMuteButton","getElementById","MuteButton","AutoPlay","AutoPause","onclick","playerVideoPromise","undefined","then","_","catch","error","console","log","navigator","serviceWorker","register","message"],"mappings":";;AGAA;;AACA;;AACA;AHDA,AEDA,ADAA,MCAMkB,GFCGlB,ACDAiB,MCAT,CAAe,CDAf,GDCA,ACDmB,CDCEhB,ACCpB,MDDD,EAA4B;AACxB,AEDAkB,EAAAA,KFCKjB,KAAL,CEDW,EFCED,CEDA,KFCM,CAACE,EAApB;AACA,AEDI,ADERc,ODDSb,CCCD,CCFKgB,ADEJd,KDDL,GAAcL,CEDV,ADER,CAAmBa,ECFI,CDEvB,CDDwB,CAACV,CEDjB,ADEe,ECDf,IFAU,CEALiB,GFAuB,ACCJd,EDD5B,ICCmB,EAAgB,QCD/B,GAA2B,KAAKc,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAD3B;ACER,ADAQ,ADCJ,MEDEY,AFCE,CAAC3B,ECDIgB,ECAF,EFCI,CEDDI,AFCEjB,KAAZ,EAAmB,CEDD,CAACyB,SDAf,GAA+B,CCAzB,CAAuB,GDAOZ,ICA9B,CAAd,kBDAuC,CAA6BD,IAA7B,CAAkC,IAAlC,CAA/B;ACCR,AHAI,AEAC,ADCGf,IAAAA,EEDF6B,CHAG/B,GCCK,CAACK,CEDH,GAAEiB,CFCN,GDDJ,ACCiB,IEDC,AFCd,CEDeQ,aAAT,CAAuB,QAAvB,CAAd;AACA,AHCC,ACAI,MEDCE,YAAY,GAAEV,QAAQ,CAACW,cAAT,CAAwB,cAAxB,CAApB;AACA,ADAIxB,EAAAA,GAAG,CCADyB,ADAEhC,MAAD,EAAQ,ECAC,GAAEoB,QAAQ,CAACW,cAAT,CAAwB,YAAxB,CAAlB;AAEA,AHAAtC,AEAQ,ADDJO,EAAAA,IECEA,EFDI,CCCGA,ADDFC,EDCA,CGAC,AHAAF,CCDR,EECW,ADAP,GAAYC,CCADP,EHAnB,CAAsBK,EEAd,UFAR,GAAmC,EGApB,CAAgB,SHAc;AGAZF,AHC7B,AECI,ADFP,CALD,CEKiCA,EAAE,EAAE+B,EHC3B3B,EECIiB,CCFiB,GHCf,GAAC,CECK,GAAG,IAAIC,oBAAJ,CAAyB,KAAKJ,mBAA9B,EAAkD;ACFhCjB,AHEnCI,AECIY,ECH+BhB,EHEnCI,EECIY,EFDA,CGFsC,CHEpC,CGDV,CACA,GDCiB,CCDboB,AHAW,CECI,IFDChC,CECIY,GFDT,EADF,MGCb,EADA,EAEA,IAAIqB,kBAAJ,EAFA;AAD2B,AHGvBhC,AEDmE,CCF5D,CAAf,EHGQA,CEDiB,CAAjB,GFCK,EAAE,ICDAQ,EDCK,KAAKR,KAAL,EAFH;AAGTP,AEEAsB,IFFAtB,AEEAsB,KFFK,EAAE,CEEC,CAACE,GFFGxB,IEEZ,CFLS,AEKQ,KAAKK,MAAL,CAAYL,KAA7B;ACDRkC,ADGQT,IAAAA,ECHF,CAACe,KDGS,CAACd,CCHjB,GAAiB,MAAK,MDGd,CAA0B,kBAA1B,EAA6C,KAAKL,uBAAlD;ACFJ,AHDI,AEIH,QCHKoB,AHDEjC,KAAJ,GAAW,UGCS,GAACH,MAAM,CAACC,IAAP,EAAzB;AHAQ,aAAO,KAAKN,KAAL,CAAWQ,KAAlB;AGCR,AHAK,AEINW,EAAAA,GFVc,CGMTsB,eDIc,CAACd,ECJG,KAAKe,ADIT,EAAU,OCJ5B,EAAuC;AACnCD,ADKJ,ICLIA,MDKEb,KAAK,GAAED,ICLS,CAACgB,EDKH,CAAC,CCLjB,ADKgB,CCLQC,ADK5B,CCL6B,IAAE,CAC1B,CADD,EAECC,KAFD,CAEOC,KAAK,IAAE;AACVC,AHFJ,AEMA,MCJIA,EHFAvC,EEMEqB,GCJK,AHFX,CGEYmB,AHFFvC,GGEN,AHFJ,AEMa,CCJGqC,CHFF,CEMClB,GCJX,EDIgB,CAACE,iBAAN,IAA2B,KAAKZ,SAA/C;ACHC,AHFG,KGFJ,MHESlB,KAAL,CAAWQ,KAAX,GAAiBC,GAAjB;AGGP,AHFI,AEMD,QAAIoB,OAAJ,EAAa;ACHpB,ADIW,CCbZ,UDaiBxB,MAAL,CAAYC,IAAZ;AFjBK,AEkBR,GFlBL,EEgBI,MAEM;ACJd+B,AHDI,AEMQ,OFNHnC,GGCC,CAACsC,ADKMnC,GFNb,CAAaK,EEML,CCLZ,ADKwBH,GCLH,CHDjB,CAAqBI,AEMb,ICLeN,EHDI,IGCE,AHDE,CGCDS,IAAP,EAA3B;AHAQH,AEMC,IFNDA,MAAM,CAACC,GAAP,CAAWP,MAAX;AGER,AHDK,AEQD,GFVA,CGGD,mBAAmB4C,SAAtB,EAAgC;AAC5BA,AHDH,CAjBD,CGkBIA,SAAS,CAACC,aAAV,CAAwBC,QAAxB,CAAiC,sCAAjC,EAA2CN,KAA3C,CAAiDC,KAAK,IAAE;AACpDC,ADML1B,EAAAA,ECNK0B,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACM,GDMA,GAAE,CCNpB;AACH,AHDLtD,AEQI,GCTA,ODSM+B,CFRC,CAACzB,KEQK,GAAGqB,CFRpB,CAAsBnB,IAAtB,EEQ4B,CFRC,AEQAyB,YFRW,GEQpB,KAA4B,SAA5C;ACNH,AHAG,EGGJ,IHHQ,KAAK/B,KAAL,CAAWa,MAAf,EAAuB;AACnB,AEMJ,QAAIgB,CFNK7B,KAAL,CAAWM,AEMf,EAAa,EFNT;AACH,AEMG,GFRJ,MAEK,EEMID,MAAL,CAAYC,IAAZ;AFLA,AEMH,KAFD,IFJSN,EEMH,GFNF,CAAWO,KAAX;AACH,AEMG,WAAKF,MAAL,CAAYE,KAAZ;AFFP,AEGI,CFbL;AEeI;AFHJT,WAAW,CAACM,SAAZ,CAAsBG,KAAtB,GAA8B,YAAW;AACjC,AEzCO,OFyCFP,KAAL,CAAWO,KAAX;AACP,CAFD;eEQeS;AFJflB,WAAW,CAACM,SAAZ,CAAsBU,IAAtB,GAA4B,YAAU;AAElC,MAAI,KAAKd,KAAL,CAAWQ,KAAf,EAAsB;AAClB,SAAKR,KAAL,CAAWQ,KAAX,GAAkB,KAAlB;AACH,GAFD,MAEK;AACD,SAAKR,KAAL,CAAWQ,KAAX,GAAkB,IAAlB;AACH;AACJ,CAPD,EASA;AACA;AACA;;;eAGeV","file":"assests.7e1949dc.js","sourceRoot":"..","sourcesContent":["\r\nfunction MediaPlayer(config){\r\n    this.media = config.el\r\n    this.plugins= config.plugins || []\r\n\r\n    this._initPlugins()\r\n\r\n}\r\n\r\nMediaPlayer.prototype._initPlugins=function(){\r\n    const player={\r\n        play: ()=> this.play(),\r\n        pause: ()=> this.pause(),\r\n        media: this.media,\r\n        get muted(){\r\n            return this.media.muted\r\n        },\r\n\r\n        set muted(val){\r\n            this.media.muted=val\r\n        }\r\n    }\r\n    \r\n    this.plugins.forEach(plugin => {\r\n        plugin.run(player)\r\n    });\r\n}\r\n\r\nMediaPlayer.prototype.play = function() {\r\n\r\n    if (this.media.paused) {\r\n        this.media.play();\r\n    }else{\r\n        this.media.pause();\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nMediaPlayer.prototype.pause = function() {\r\n        this.media.pause();\r\n}\r\n\r\nMediaPlayer.prototype.mute= function(){\r\n    \r\n    if (this.media.muted) {\r\n        this.media.muted =false;\r\n    }else{\r\n        this.media.muted =true;\r\n    }\r\n}\r\n\r\n// MediaPlayer.prototype.unmute= function(){\r\n//     this.media.muted =false;\r\n// }\r\n\r\n\r\nexport default MediaPlayer","function autoPlay(){\r\n    \r\n}\r\n\r\nautoPlay.prototype.run=function(player){\r\n    if (!player.muted) {\r\n        player.muted=true\r\n    }\r\n    player.play() \r\n}\r\n\r\nexport default autoPlay","class autoPause{\r\n    constructor(){\r\n        this.threshold=0.25,\r\n        this.handlerIntersection = this.handlerIntersection.bind(this)\r\n        this.handlerVisivilityCahnge = this.handlerVisivilityCahnge.bind(this)\r\n    }\r\n\r\n    run(player){\r\n\r\n        this.player=player\r\n\r\n        const observer = new IntersectionObserver(this.handlerIntersection,{\r\n            threshold: this.threshold,\r\n        })\r\n\r\n        observer.observe(this.player.media)\r\n\r\n        document.addEventListener(\"visibilitychange\",this.handlerVisivilityCahnge)\r\n    }\r\n\r\n   handlerIntersection(entries) {\r\n\r\n    const entry= entries[0]\r\n  \r\n        const visible= entry.intersectionRatio >= this.threshold\r\n    \r\n        if (visible) {\r\n            this.player.play()\r\n        }else {\r\n            this.player.pause()\r\n        }  \r\n    \r\n       \r\n   }\r\n   handlerVisivilityCahnge(){\r\n\r\n    const visible = document.visibilityState ===\"visible\"\r\n    if (visible) {\r\n        this.player.play()\r\n    }else {\r\n        this.player.pause()\r\n    }  \r\n\r\n   } \r\n}\r\n\r\n\r\n\r\nexport default autoPause","import MediaPlayer from \"./mediaPlayer.js\"\r\nimport AutoPlay from \"./plugins/autoPlay.js\"\r\nimport AutoPause from \"./plugins/autoPause.js\"\r\n\r\nconst video = document.querySelector(\"video\")\r\nconst button= document.querySelector(\"button\")\r\nconst unMuteButton= document.getElementById(\"UnMuteButton\")\r\nconst MuteButton= document.getElementById(\"MuteButton\")\r\n\r\nconst player = new MediaPlayer({ el: video,plugins: \r\n    [\r\n    new AutoPlay(),\r\n    new AutoPause(),\r\n] })\r\nbutton.onclick = () =>{\r\n    const playerVideoPromise=player.play()\r\n    if (playerVideoPromise !== undefined ) {\r\n        playerVideoPromise.then(_=>{\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\nMuteButton.onclick = () => player.mute()\r\n\r\nif('serviceWorker' in navigator){\r\n    navigator.serviceWorker.register('/sw.js').catch(error=>{\r\n        console.log(error.message)\r\n    })\r\n}\r\n\r\n\r\n// unMuteButton.onclick = () => player.unmute()\r\n"]}