{"id":"ejercicios/promesas.html","dependencies":[{"name":"C:\\Users\\luisf\\OneDrive\\Escritorio\\Carrera javascript\\profesional_js\\package.json","includedInParent":true,"mtime":1600176578281}],"generated":{"html":"<html>\r\n  <head>\r\n    <title>Promesas</title>\r\n  </head>\r\n\r\n  <body>\r\n    <a href=\"/ejercicios/\">Go back</a>\r\n\r\n    <ul>\r\n      <li><button id=\"sequence\">Get Top Movies in Sequence</button></li>\r\n      <li><button id=\"parallel\">Get Top Movies in Parallel</button></li>\r\n      <li><button id=\"fastest\">Get Fastest Top Movie</button></li>\r\n    </ul>\r\n\r\n    <ul id=\"movies\"></ul>\r\n\r\n    <script>// Ejemplo: renderMovies([{ title: \"Spider-Man\", release_date: \"2019-06-30\", poster_path: \"/rjbNpRMoVvqHmhmksbokcyCr7wn.jpg\" }])\n// Traducir las funciones de usar thens a usar async/await\n// Crear funci贸n para que no nos gastemos la cantidad de requests demasiado rapido\n// Crear funci贸n donde hacemos requests secuenciales\n// Crear funci贸n donde hacemos requests en paralelo\n// Crear funci贸n donde obtenemos el primer request que llegue\n// The Movie Database API: https://developers.themoviedb.org/3/getting-started/introduction\nconst apiKey = 'b89fc45c2067cbd33560270639722eae';\n\nasync function getMovie(id) {\n  const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`;\n  const movieDetail = await fetch(url);\n  const dataMovieDetalil = await movieDetail.json();\n  return dataMovieDetalil; //   return fetch(url).then(response => response.json());\n}\n\nasync function getPopularMovies() {\n  const url = `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${apiKey}`; // return fetch(url)\n  //   .then(response => response.json())\n  //   .then(data => data.results);\n\n  try {\n    const moviesPupular = await fetch(url);\n    const dataMovie = await moviesPupular.json();\n    return dataMovie.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getTopMoviesIds(n = 3) {\n  // return getPopularMovies().then(popularMovies =>\n  //    popularMovies.slice(0, n).map(movie => movie.id)\n  //  );\n  const popularMovies = await getPopularMovies();\n  const idPopularMovies = popularMovies.slice(0, n).map(movie => movie.id);\n  return idPopularMovies;\n}\n\nfunction renderMovies(movies) {\n  const movieList = document.getElementById('movies');\n  movieList.innerHTML = '';\n  movies.forEach(movie => {\n    const listItem = document.createElement('li');\n    listItem.innerHTML = `\n            <img src=\"https://image.tmdb.org/t/p/w342${movie.poster_path}\" />\n            <h5>${movie.title}</h5>\n            <p>Released on <em>${movie.release_date}</em></p>\n            `;\n    movieList.appendChild(listItem);\n  });\n}\n\nasync function getTopMoviesInSequence() {\n  const idMovies = await getTopMoviesIds();\n  const movies = [];\n\n  for (const id of idMovies) {\n    let movie = await getMovie(id);\n    movies.push(movie);\n  }\n\n  return movies;\n}\n\nasync function getTopMoviesInParallel() {\n  const idMovies = await getTopMoviesIds();\n  const movies = idMovies.map(id => getMovie(id));\n  const dataMovies = await Promise.all(movies);\n  return dataMovies;\n}\n\nasync function getFastestTopMovie() {\n  return {};\n}\n\ndocument.getElementById('sequence').onclick = async function () {\n  const movies = await getTopMoviesInSequence();\n  renderMovies(movies);\n};\n\ndocument.getElementById('parallel').onclick = async function () {\n  const movies = await getTopMoviesInParallel();\n  renderMovies(movies);\n};\n\ndocument.getElementById('fastest').onclick = async function () {\n  const movie = await getFastestTopMovie();\n  renderMovies([movie]);\n};</script>\r\n  </body>\r\n</html>"},"sourceMaps":null,"error":null,"hash":"5fb953a9ba0084b9d502594a737c935d","cacheData":{"env":{}}}